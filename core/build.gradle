apply plugin: "java"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

project.ext.mainClassName = "avolution.game.Main"
project.ext.assetsDir = new File("./assets")

dependencies {
    compile "com.badlogicgames.gdx:gdx-backend-lwjgl:1.9.6"
    compile "com.badlogicgames.gdx:gdx-platform:1.9.6:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-box2d-platform:1.9.6:natives-desktop"
    compile "com.badlogicgames.gdx:gdx:1.9.6"
    compile "com.badlogicgames.gdx:gdx-box2d:1.9.6"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.47'
    testCompile 'org.assertj:assertj-core:3.8.0'
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(dependsOn: classes, type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}
